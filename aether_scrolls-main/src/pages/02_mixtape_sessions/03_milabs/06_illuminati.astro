---
import LyricPageLayout from '@/layouts/LyricPageLayout.astro';
import LyricPage from '@/components/lyrics/LyricPage.astro';

export async function GET({ request }: { request: Request }) {
  const url = new URL(request.url);
  const pathnameParts = url.pathname.split('/').filter(Boolean); // break apart the URL
  const fileName = pathnameParts[pathnameParts.length - 1]; // get the last part

  const title = fileName
    .replace(/^\d+_/, '')            // remove the track number and underscore
    .replace(/_/g, ' ')               // replace underscores with spaces
    .replace(/\b\w/g, (l) => l.toUpperCase()); // capitalize first letter of each word

  const album = "Milabs"; // Hardcoded for now since youâ€™re inside /03_milabs/

  const apiUrl = new URL(`/api/arsenal?title=${encodeURIComponent(title)}`, request.url).toString();

  try {
    const apiRes = await fetch(apiUrl);
    const result = await apiRes.json();

    if (!result.length || !result[0].url) {
      return new Response('Track not found', { status: 404 });
    }

    const response = await fetch(result[0].url);
    const lyrics = await response.text();

    return new Response(JSON.stringify({
      title,
      album,
      artist: "Hawk Eye The Rapper",
      lyrics,
    }), {
      headers: { 'Content-Type': 'application/json' },
    });
  } catch (err) {
    return new Response(`Error loading lyrics: ${err instanceof Error ? err.message : 'Unknown error'}`, { status: 500 });
  }
}

const { title, album, artist, lyrics } = Astro.props;
---

<LyricPageLayout {title} {album} {artist} {lyrics}>
  <LyricPage {lyrics} />
</LyricPageLayout>